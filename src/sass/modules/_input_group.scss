//
// Base styles
//
$btn-prefix: #{$unit-prefix}btn;
$btn-group-prefix: #{$unit-prefix}btn-group;

#{$module-prefix}input-group {
  position: relative;
  width: 100%;

  @if $enable-flex {
    display: flex;
  } @else {
    display: table;
    // Prevent input groups from inheriting border styles from table cells when
    // placed within a table.
    border-collapse: separate;
  }

  .input-group-control {
    // Ensure that the input is always above the *appended* addon button for
    // proper border colors.
    position: relative;
    z-index: 2;
    // Bring the "active" form control to the front
    @include hover-focus-active {
      z-index: 3;
    }

    @if $enable-flex {
      flex: 1 1 auto;
      // Add width 1% and flex-basis auto to ensure that button will not wrap out
      // the column. Applies to IE Edge+ and Firefox. Chrome do not require this.
      width: 1%;
    } @else {
      // IE9 fubars the placeholder attribute in text inputs and the arrows on
      // select elements in input groups. To fix it, we float the input. Details:
      // https://github.com/twbs/bootstrap/issues/11561#issuecomment-28936855
      float: left;
      width: 100%;
    }
    margin-bottom: 0;
  }
}

.input-group-addon,
.input-group-btn,
#{$module-prefix}input-group .input-group-control {
  @if $enable-flex {
    // Vertically centers the content of the addons within the input group
    display: flex;
    flex-direction: column;
    justify-content: center;
  } @else {
    display: table-cell;
  }

  &:not(:first-child):not(:last-child) {
    @include border-radius(0);
  }
}

.input-group-addon,
.input-group-btn {
  @if not $enable-flex {
    width: 1%;
  }
  white-space: nowrap;
  vertical-align: middle; // Match the inputs
}


// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

#{$module-prefix}input-group-lg > .input-group-control,
#{$module-prefix}input-group-lg > .input-group-addon,
#{$module-prefix}input-group-lg > .input-group-btn > #{$unit-prefix}btn {
  @extend .form-control-lg;
}
#{$module-prefix}input-group-sm > .input-group-control,
#{$module-prefix}input-group-sm > .input-group-addon,
#{$module-prefix}input-group-sm > .input-group-btn > #{$unit-prefix}btn {
  @extend .form-control-sm;
}


//
// Text input groups
//

.input-group-addon {
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $input-line-height;
  color: $input-color;
  text-align: center;
  background-color: $input-group-addon-bg;
  border: $input-btn-border-width solid $input-group-addon-border-color;
  @include border-radius($input-border-radius);

  // Sizing
  &.input-group-control-sm {
    padding: $input-padding-y-sm $input-padding-x-sm;
    font-size: $font-size-sm;
    @include border-radius($input-border-radius-sm);
  }
  &.input-group-control-lg {
    padding: $input-padding-y-lg $input-padding-x-lg;
    font-size: $font-size-lg;
    @include border-radius($input-border-radius-lg);
  }

  // scss-lint:disable QualifyingElement
  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
  // scss-lint:enable QualifyingElement
}


//
// Reset rounded corners
//

#{$module-prefix}input-group .input-group-control:not(:last-child),
.input-group-addon:not(:last-child),
.input-group-btn:not(:last-child) > #{$btn-prefix},
.input-group-btn:not(:last-child) > #{$btn-group-prefix} > #{$btn-prefix},
.input-group-btn:not(:last-child) > .dropdown-toggle,
.input-group-btn:not(:first-child) > #{$btn-prefix}:not(:last-child):not(.dropdown-toggle),
.input-group-btn:not(:first-child) > #{$btn-group-prefix}:not(:last-child) > #{$btn-prefix} {
  @include border-right-radius(0);
}
.input-group-addon:not(:last-child) {
  border-right: 0;
}
#{$module-prefix}input-group .input-group-control:not(:first-child),
.input-group-addon:not(:first-child),
.input-group-btn:not(:first-child) > #{$btn-prefix},
.input-group-btn:not(:first-child) > #{$btn-group-prefix} > #{$btn-prefix},
.input-group-btn:not(:first-child) > .dropdown-toggle,
.input-group-btn:not(:last-child) > #{$btn-prefix}:not(:first-child),
.input-group-btn:not(:last-child) > #{$btn-group-prefix}:not(:first-child) > #{$btn-prefix} {
  @include border-left-radius(0);
}
.input-group-control + .input-group-addon:not(:first-child) {
  border-left: 0;
}

//
// Button input groups
//

.input-group-btn {
  position: relative;
  // Jankily prevent input button groups from wrapping with `white-space` and
  // `font-size` in combination with `inline-block` on buttons.
  font-size: 0;
  white-space: nowrap;

  // Negative margin for spacing, position for bringing hovered/focused/actived
  // element above the siblings.
  > #{$btn-prefix} {
    position: relative;

    @if $enable-flex {
      // Vertically stretch the button and center its content
      flex: 1;
    }

    + #{$btn-prefix} {
      margin-left: (-$input-btn-border-width);
    }

    // Bring the "active" button to the front
    @include hover-focus-active {
      z-index: 3;
    }
  }

  // Negative margin to only have a single, shared border between the two
  &:not(:last-child) {
    > #{$btn-prefix},
    > #{$btn-group-prefix} {
      margin-right: (-$input-btn-border-width);
    }
  }
  &:not(:first-child) {
    > #{$btn-prefix},
    > #{$btn-group-prefix} {
      z-index: 2;
      margin-left: (-$input-btn-border-width);
      // Because specificity
      @include hover-focus-active {
        z-index: 3;
      }
    }
  }
}
